{
  "version": 3,
  "sources": ["../src/app.ts"],
  "sourcesContent": ["/**\r\n * /!\\ This file is auto-generated.\r\n *\r\n * This is the entry point of your standalone application.\r\n *\r\n * There are multiple tags used by the editor to inject code automatically:\r\n *     - `wle:auto-constants:start` and `wle:auto-constants:end`: The project's constants,\r\n *        such as the project's name, whether it should use the physx runtime, etc...\r\n *     - `wle:auto-benchmark:start` and `wle:auto-benchmark:end`: Append the benchmarking code\r\n */\r\n\r\nimport {\r\n\tloadRuntime,\r\n\tLoadRuntimeOptions,\r\n\tLogLevel,\r\n} from '@wonderlandengine/api';\r\nimport 'wle-pp/add_type_extensions_to_typescript.js';\r\n\r\nconst waitWindowLoad: Promise<void> = new Promise((resolve: () => void) => {\r\n\tif (document.readyState == 'complete') {\r\n\t\tresolve();\r\n\t} else {\r\n\t\twindow.addEventListener('load', resolve, { once: true });\r\n\t}\r\n});\r\n\r\nawait waitWindowLoad;\r\n\r\n/* wle:auto-constants:start */\nconst Constants = {\n    ProjectName: 'wle-pplayground',\n    RuntimeBaseName: 'WonderlandRuntime',\n    WebXRRequiredFeatures: ['local',],\n    WebXROptionalFeatures: ['local','local-floor','hand-tracking','hit-test',],\n};\nconst RuntimeOptions = {\n    physx: true,\n    loader: false,\n    xrFramebufferScaleFactor: 1,\n    xrOfferSession: {\n        mode: 'auto',\n        features: Constants.WebXRRequiredFeatures,\n        optionalFeatures: Constants.WebXROptionalFeatures,\n    },\n    canvas: 'canvas',\n} as const;\n/* wle:auto-constants:end */\r\n\r\nconst disableEngineLogs = false;\r\nif (disableEngineLogs) {\r\n\t(RuntimeOptions as LoadRuntimeOptions).logs = [LogLevel.Error];\r\n}\r\n\r\nconst engine = await loadRuntime(Constants.RuntimeBaseName, RuntimeOptions);\r\nengine.onLoadingScreenEnd.once(() => {\r\n\tconst el = document.getElementById('version');\r\n\tif (el) setTimeout(() => el.remove(), 2000);\r\n});\r\n\r\n/* WebXR setup. */\r\n\r\nfunction requestSession(mode: XRSessionMode): void {\r\n\tengine\r\n\t\t.requestXRSession(\r\n\t\t\tmode,\r\n\t\t\tConstants.WebXRRequiredFeatures,\r\n\t\t\tConstants.WebXROptionalFeatures,\r\n\t\t)\r\n\t\t.catch((e) => console.error(e));\r\n}\r\n\r\nfunction setupButtonsXR(): void {\r\n\t/* Setup AR / VR buttons */\r\n\tconst arButton = document.getElementById('ar-button');\r\n\tif (arButton) {\r\n\t\tarButton.dataset.supported = engine.arSupported as unknown as string;\r\n\t\tarButton.addEventListener('click', () => requestSession('immersive-ar'));\r\n\t}\r\n\tconst vrButton = document.getElementById('vr-button');\r\n\tif (vrButton) {\r\n\t\tvrButton.dataset.supported = engine.vrSupported as unknown as string;\r\n\t\tvrButton.addEventListener('click', () => requestSession('immersive-vr'));\r\n\t}\r\n}\r\n\r\nsetupButtonsXR();\r\n\r\nconst sceneLoadDelaySeconds = 0;\r\nif (sceneLoadDelaySeconds > 0) {\r\n\tawait new Promise((resolve) =>\r\n\t\tsetTimeout(resolve, sceneLoadDelaySeconds * 1000),\r\n\t);\r\n}\r\n\r\ntry {\r\n\tawait engine.loadMainScene(`${Constants.ProjectName}.bin`);\r\n} catch (error) {\r\n\tconsole.error(error);\r\n\twindow.alert(`Failed to load ${Constants.ProjectName}.bin: ` + error);\r\n}\r\n\r\n/* wle:auto-benchmark:start */\n/* wle:auto-benchmark:end */\r\n"],
  "mappings": ";AAWA;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AAGP,IAAM,iBAAgC,IAAI,QAAQ,CAAC,YAAwB;AAC1E,MAAI,SAAS,cAAc,YAAY;AACtC,YAAQ;AAAA,EACT,OAAO;AACN,WAAO,iBAAiB,QAAQ,SAAS,EAAE,MAAM,KAAK,CAAC;AAAA,EACxD;AACD,CAAC;AAED,MAAM;AAGN,IAAM,YAAY;AAAA,EACd,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,uBAAuB,CAAC,OAAQ;AAAA,EAChC,uBAAuB,CAAC,SAAQ,eAAc,iBAAgB,UAAW;AAC7E;AACA,IAAM,iBAAiB;AAAA,EACnB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,0BAA0B;AAAA,EAC1B,gBAAgB;AAAA,IACZ,MAAM;AAAA,IACN,UAAU,UAAU;AAAA,IACpB,kBAAkB,UAAU;AAAA,EAChC;AAAA,EACA,QAAQ;AACZ;AAGA,IAAM,oBAAoB;AAC1B,IAAI,mBAAmB;AACtB,EAAC,eAAsC,OAAO,CAAC,SAAS,KAAK;AAC9D;AAEA,IAAM,SAAS,MAAM,YAAY,UAAU,iBAAiB,cAAc;AAC1E,OAAO,mBAAmB,KAAK,MAAM;AACpC,QAAM,KAAK,SAAS,eAAe,SAAS;AAC5C,MAAI;AAAI,eAAW,MAAM,GAAG,OAAO,GAAG,GAAI;AAC3C,CAAC;AAID,SAAS,eAAe,MAA2B;AAClD,SACE;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV,UAAU;AAAA,EACX,EACC,MAAM,CAAC,MAAM,QAAQ,MAAM,CAAC,CAAC;AAChC;AAEA,SAAS,iBAAuB;AAE/B,QAAM,WAAW,SAAS,eAAe,WAAW;AACpD,MAAI,UAAU;AACb,aAAS,QAAQ,YAAY,OAAO;AACpC,aAAS,iBAAiB,SAAS,MAAM,eAAe,cAAc,CAAC;AAAA,EACxE;AACA,QAAM,WAAW,SAAS,eAAe,WAAW;AACpD,MAAI,UAAU;AACb,aAAS,QAAQ,YAAY,OAAO;AACpC,aAAS,iBAAiB,SAAS,MAAM,eAAe,cAAc,CAAC;AAAA,EACxE;AACD;AAEA,eAAe;AAEf,IAAM,wBAAwB;AAC9B,IAAI,wBAAwB,GAAG;AAC9B,QAAM,IAAI;AAAA,IAAQ,CAAC,YAClB,WAAW,SAAS,wBAAwB,GAAI;AAAA,EACjD;AACD;AAEA,IAAI;AACH,QAAM,OAAO,cAAc,GAAG,UAAU,iBAAiB;AAC1D,SAAS,OAAP;AACD,UAAQ,MAAM,KAAK;AACnB,SAAO,MAAM,kBAAkB,UAAU,sBAAsB,KAAK;AACrE;",
  "names": []
}
